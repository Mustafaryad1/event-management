{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/forms/edit/edit.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","EditForm","props","useState","location","state","event","setEvent","useEffect","date","dateOfEvent","split","onChange","e","name","target","className","type","description","onClick","axios","put","id","then","res","history","catch","console","log"],"mappings":"6NAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,kKICvF,SAASC,EAASC,GAC7B,MAA0BC,mBAASD,EAAME,SAASC,MAAMC,OAAxD,mBAAOA,EAAP,KAAcC,EAAd,KACAC,qBAAU,WACN,IAAMC,EAAOP,EAAME,SAASC,MAAMC,MAAMI,YAAYC,MAAM,KAAK,GAC/DJ,EAAS,2BAAID,GAAL,IAAWI,YAAYD,OAEjC,IASJ,OACM,gCACI,2CADJ,SAEU,uBACMG,SAAU,SAACC,GAAKN,EAAS,2BAAID,GAAL,IAAWQ,KAAKD,EAAEE,OAAOnB,UACjDoB,UAAW,eACXC,KAAK,OACLrB,MAAOU,EAAMQ,OAN7B,gBAOiB,uBACCF,SAAU,SAACC,GAAKN,EAAS,2BAAID,GAAL,IAAWY,YAAYL,EAAEE,OAAOnB,UACxDoB,UAAW,eACXC,KAAK,OACLrB,MAAOU,EAAMY,cAX/B,SAYU,uBACMN,SAAU,SAACC,GAAKN,EAAS,2BAAID,GAAL,IAAWI,YAAYG,EAAEE,OAAOnB,UACxDoB,UAAW,eACXC,KAAK,OACLrB,MAAOU,EAAMI,cACzB,uBACA,wBAAQM,UAAW,kBAAmBG,QA1BzB,WACjBC,IAAMC,IAAN,iBAAoBf,EAAMgB,IAAKhB,GAAOiB,MAAK,SAAAC,GACvCtB,EAAMuB,QAAQ9B,KAAK,iBACpB+B,OAAM,SAAA5B,GACL6B,QAAQC,IAAI9B,OAsBZ","file":"static/js/10.99198416.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect, useState } from 'react';\nimport {FormEdit} from 'react-formio';\nimport axios from 'axios';\nimport { CCard, CCardBody, CCol, CSwitch } from '@coreui/react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function EditForm(props) {\n    const [event, setEvent] = useState(props.location.state.event);\n    useEffect(()=>{\n        const date = props.location.state.event.dateOfEvent.split('T')[0];\n        setEvent({...event,dateOfEvent:date})\n\n    },[])\n\n    const handleUpdate = ()=>{\n        axios.put(`/event/${event.id}`,event).then(res=>{\n            props.history.push('/form/list')\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n  return (\n        <div>\n            <h1>Edit Form</h1>\n            name  <input\n                        onChange={(e)=>{setEvent({...event,name:e.target.value})}} \n                        className={\"form-control\"} \n                        type=\"text\" \n                        value={event.name}/>\n            description  <input \n                          onChange={(e)=>{setEvent({...event,description:e.target.value})}}\n                          className={\"form-control\"}\n                          type=\"text\" \n                          value={event.description}/>\n            date  <input \n                        onChange={(e)=>{setEvent({...event,dateOfEvent:e.target.value})}}\n                        className={\"form-control\"} \n                        type=\"date\" \n                        value={event.dateOfEvent}/>\n            <hr/>\n            <button className={\"btn btn-primary\"} onClick={handleUpdate}>Update</button>\n        </div>\n    );\n  \n}"],"sourceRoot":""}