{"version":3,"sources":["views/users/userForms.js"],"names":["UserEvents","props","useState","events","setEvents","useDispatch","useEffect","axios","get","then","res","data","columns","useMemo","name","selector","sortable","grow","center","compact","wrap","style","cell","row","index","column","id","onClick","event","history","push","console","log","post","event_id","catch","err","title","defaultSortFieldId","pagination","highlightOnHover","striped","pointerOnHover","customStyles","rows","minHeight","fontSize","headCells","paddingLeft","paddingRight","cells"],"mappings":"wSAMe,SAASA,EAAWC,GAC/B,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACiBC,cAuBjBC,qBAAU,WACNC,IAAMC,IAAN,eAAyBC,MAAK,SAAAC,GAE1BN,EAAUM,EAAIC,WAEnB,IAGH,IAaMC,EAAUC,mBACZ,iBAAM,CACN,CAAEC,KAAM,QAASC,SAAU,OAAQC,UAAU,GAC7C,CACIF,KAAK,UACLG,KAAK,EACLC,QAAO,EACPC,SAAQ,EACRC,MAAK,EACLC,MAAM,GAGNC,KAAM,SAACC,EAAIC,EAAMC,EAAOC,GAAlB,OACN,qCACC,wBAAQL,MAAO,CAAC,YAAc,OAAO,QAAU,YAAY,OAAS,OAAO,WAAa,OAAO,MAAQ,QAAQ,aAAe,OAAO,SAAW,QAASM,QAAS,kBA3BzJC,EA2BwKL,OA1BtLtB,EAAM4B,QAAQC,KAAd,wBAAoCF,EAAMF,KAD7B,IAACE,GA2BT,kBACA,wBAAQP,MAAO,CAAC,YAAc,OAAO,QAAU,YAAY,OAAS,OAAO,WAAa,UAAU,MAAQ,QAAQ,aAAe,OAAO,SAAW,QAASM,QAAS,kBAxBpJC,EAwByKL,EAvBjMQ,QAAQC,IAAI,YACZzB,IAAM0B,KAAK,cAAc,CAACC,SAASN,EAAMF,KAAKjB,MAAK,SAAAC,GACjDT,EAAM4B,QAAQC,KAAd,wBAAoCF,EAAMF,QACzCS,OAAM,SAAAC,GACPL,QAAQC,IAAII,MALS,IAACR,GAwBjB,6BAKT,OACI,8BACI,cAAC,IAAD,CACQS,MAAM,SACNzB,QAASA,EACTD,KAAMR,EACNmC,mBAAoB,EACpBC,YAAU,EACVC,kBAAgB,EAChBC,SAAO,EACPC,gBAAc,EACdC,aAzEK,CACjBC,KAAM,CACJvB,MAAO,CACLwB,UAAW,OACXC,SAAS,SAGbC,UAAW,CACT1B,MAAO,CACL2B,YAAa,MACbC,aAAc,QAGlBC,MAAO,CACL7B,MAAO,CACL2B,YAAa,MACbC,aAAc","file":"static/js/15.00e20bea.chunk.js","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport DataTable from 'react-data-table-component';\n\n\nexport default function UserEvents(props) {\n    const [events, setEvents] = useState([])\n    const dispatch = useDispatch()\n\n    const customStyles = {\n        rows: {\n          style: {\n            minHeight: '80px', // override the row height\n            fontSize:'17px',\n          }\n        },\n        headCells: {\n          style: {\n            paddingLeft: '8px', // override the cell padding for head cells\n            paddingRight: '8px',\n          },\n        },\n        cells: {\n          style: {\n            paddingLeft: '8px', // override the cell padding for data cells\n            paddingRight: '8px',\n          },\n        },\n      };\n\n    useEffect(() => {\n        axios.get(`/event/list`).then(res =>{\n            // console.log(res.data)\n            setEvents(res.data)\n        });\n    }, []);\n\n\n    const handleShow=(event)=> {\n        props.history.push(`/form/display/${event.id}`);\n\n    };\n    const handleAttendance = (event)=>{\n      console.log(\"att\")\n      axios.post('/attendance',{event_id:event.id}).then(res=>{\n        props.history.push(`/form/display/${event.id}`)\n      }).catch(err=>{\n        console.log(err)\n      })\n    }\n\n    const columns = useMemo(\n        () => [\n        { name: \"Title\", selector: \"name\", sortable: true },\n        {\n            name:\"Actions\",\n            grow:2,\n            center:true,\n            compact:true,\n            wrap:true,\n            style:{\n\n            },\n            cell: (row,index,column,id) =>\n            <>\n             <button style={{'marginRight':'10px',\"padding\":\"10px 16px\",\"border\":\"none\",\"background\":\"gray\",\"color\":\"white\",\"borderRadius\":\"50em\",\"fontSize\":\"14px\"}} onClick={()=>handleShow(row)}>Show</button>\n             <button style={{'marginRight':'10px',\"padding\":\"10px 16px\",\"border\":\"none\",\"background\":\"#007bff\",\"color\":\"white\",\"borderRadius\":\"50em\",\"fontSize\":\"14px\"}} onClick={()=>handleAttendance(row)}>Attend</button>\n            </>\n        },\n      ])\n\n    return (\n        <div>\n            <DataTable\n                    title=\"Events\"\n                    columns={columns}\n                    data={events}\n                    defaultSortFieldId={1}\n                    pagination\n                    highlightOnHover\n                    striped\n                    pointerOnHover\n                    customStyles={customStyles}\n                    />\n\n        </div>\n    );\n\n}\n"],"sourceRoot":""}